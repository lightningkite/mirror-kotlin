//Generated by Lightning Kite's Mirror plugin
//AUTOMATICALLY GENERATED AND WILL BE OVERRIDDEN IF THIS MESSAGE IS PRESENT
package com.lightningkite.lokalize

import com.lightningkite.mirror.info.*
import kotlin.reflect.KClass

@Suppress("RemoveExplicitTypeArguments", "UNCHECKED_CAST", "USELESS_CAST")
object TimeStampClassInfo: ClassInfo<TimeStamp> {

   override val kClass: KClass<TimeStamp> = TimeStamp::class
   override val modifiers: List<ClassInfo.Modifier> = listOf(ClassInfo.Modifier.Data)

   override val implements: List<Type<*>> = listOf()

   override val packageName: String = "com.lightningkite.lokalize"
   override val owner: KClass<*>? = null
   override val ownerName: String? = null

   override val name: String = "TimeStamp"
   override val annotations: List<AnnotationInfo> = listOf()
   override val enumValues: List<TimeStamp>? = null

   val fieldMillisecondsSinceEpoch = FieldInfo<TimeStamp, kotlin.Long>(this, "millisecondsSinceEpoch", Type<kotlin.Long>(kotlin.Long::class, listOf(), false), false, { it.millisecondsSinceEpoch as kotlin.Long}, listOf())

   override val fields:List<FieldInfo<TimeStamp, *>> = listOf(fieldMillisecondsSinceEpoch)

   override fun construct(map: Map<String, Any?>): TimeStamp {
       //Gather variables
       val millisecondsSinceEpoch:kotlin.Long = map["millisecondsSinceEpoch"] as kotlin.Long
           //Handle the optionals
       
       //Finally do the call
       return TimeStamp(
           millisecondsSinceEpoch = millisecondsSinceEpoch
       )
   }

}