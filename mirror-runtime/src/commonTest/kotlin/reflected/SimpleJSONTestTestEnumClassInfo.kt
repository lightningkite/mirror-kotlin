//Generated by Lightning Kite's Mirror plugin
//AUTOMATICALLY GENERATED AND WILL BE OVERRIDDEN IF THIS MESSAGE IS PRESENT
package com.lightningkite.mirror.serialization.json

import com.lightningkite.mirror.TestRegistry
import com.lightningkite.mirror.serialization.DefaultRegistry
import com.lightningkite.mirror.serialization.SerializationRegistry
import kotlin.reflect.KClass
import kotlin.test.Test
import com.lightningkite.mirror.info.*

@Suppress("RemoveExplicitTypeArguments", "UNCHECKED_CAST", "USELESS_CAST")
object SimpleJSONTestTestEnumClassInfo: ClassInfo<SimpleJSONTest.TestEnum> {

    override val kClass: KClass<SimpleJSONTest.TestEnum> = SimpleJSONTest.TestEnum::class
    override val modifiers: List<ClassInfo.Modifier> = listOf()
    override val companion: Any? get() = null

    override val implements: List<Type<*>> = listOf()

    override val packageName: String = "com.lightningkite.mirror.serialization.json"
    override val owner: KClass<*>? = SimpleJSONTest::class
    override val ownerName: String? = "SimpleJSONTest"

    override val name: String = "TestEnum"
    override val annotations: List<AnnotationInfo> = listOf()
    override val enumValues: List<SimpleJSONTest.TestEnum>? = listOf(SimpleJSONTest.TestEnum.ValueA, SimpleJSONTest.TestEnum.ValueB, SimpleJSONTest.TestEnum.ValueC)

    

    override val fields:List<FieldInfo<SimpleJSONTest.TestEnum, *>> = listOf()

    override fun construct(map: Map<String, Any?>): SimpleJSONTest.TestEnum = throw NotImplementedError()

}