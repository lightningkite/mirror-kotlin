//Generated by Lightning Kite's Mirror plugin
//AUTOMATICALLY GENERATED AND WILL BE OVERRIDDEN IF THIS MESSAGE IS PRESENT
package com.lightningkite.mirror.test

import kotlinx.serialization.Serializable
import com.lightningkite.mirror.info.*
import kotlin.reflect.KClass

@Suppress("RemoveExplicitTypeArguments", "UNCHECKED_CAST", "USELESS_CAST")
object IntDataClassInfo: ClassInfo<IntData> {

    override val kClass: KClass<IntData> = IntData::class
    override val modifiers: List<ClassInfo.Modifier> = listOf(ClassInfo.Modifier.Data)
    override val companion: Any? get() = null

    override val implements: List<Type<*>> = listOf()

    override val packageName: String = "com.lightningkite.mirror.test"
    override val owner: KClass<*>? = null
    override val ownerName: String? = null

    override val name: String = "IntData"
    override val annotations: List<AnnotationInfo> = listOf(AnnotationInfo("@Serializable", listOf()))
    override val enumValues: List<IntData>? = null

    val fieldIntV = FieldInfo<IntData, Int>(this, "intV", Type<Int>(Int::class, listOf(), false), false, { it.intV as Int}, listOf())

    override val fields:List<FieldInfo<IntData, *>> = listOf(fieldIntV)

    override fun construct(map: Map<String, Any?>): IntData {
        //Gather variables
        val intV:Int = map["intV"] as Int
        //Handle the optionals
        
        //Finally do the call
        return IntData(
            intV = intV
        )
    }

}